language: python
sudo: false
cache:
  directories:
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853
    - $YT_DATA_DIR
  pip: true

addons:
  apt:
    update: true
    packages:
      - csh
      - libhdf5-serial-dev
      - gfortran
      - libtool-bin

env:
  global:
    YT_DATA_DIR=$HOME/yt_test

before_install:
  - |
    echo "backend : Agg" > $HOME/matplotlibrc
    export MATPLOTLIBRC=$HOME
    if [ ! -d $YT_DATA_DIR/IsolatedGalaxy ]; then
      # Download test data
      mkdir -p $YT_DATA_DIR
      pushd $YT_DATA_DIR
      wget --quiet http://yt-project.org/data/IsolatedGalaxy.tar.gz
      tar xzf IsolatedGalaxy.tar.gz
      rm IsolatedGalaxy.tar.gz
      popd
    fi

install:
  - |
    # setup environment
    ccache -s
    # Upgrade pip and setuptools and wheel to get clean install
    pip install --upgrade pip
    pip install --upgrade wheel
    pip install --upgrade setuptools
    # Install dependencies
    pip install numpy cython h5py matplotlib fastcache flake8 pytest yt
    # Install Grackle
    ./configure
    cd src/clib
    make machine-travis-ci
    if [[ $TRAVIS_BUILD_STAGE_NAME = "Omp" ]]; then
      make omp-on
    fi
    make
    mkdir -p $HOME/local
    make install
    export LD_LIBRARY_PATH=$HOME/local/lib:$LD_LIBRARY_PATH
    if [[ $TRAVIS_BUILD_STAGE_NAME != "Omp" ]]; then
      cd ../python
      python setup.py develop
    fi
    cd ../

jobs:
  include:
    - stage: tests
      name: "tests with Python 2.7"
      python: 2.7
      script: py.test python/tests

    - stage: tests
      name: "tests with Python 3.5"
      python: 3.5
      script: py.test python/tests

    - stage: tests
      name: "tests with Python 3.6"
      python: 3.6
      script: py.test python/tests

    - stage: docs
      name: "docs build test"
      python: 3.6
      before_install: skip
      install:
        - |
          # setup environment
          ccache -s
          # Upgrade pip and setuptools and wheel to get clean install
          pip install --upgrade pip
          pip install --upgrade wheel
          pip install --upgrade setuptools
          # Install dependencies
          pip install sphinx
      script:
        - |
          cd doc/source
          python -m sphinx -M html "." "_build" -W

    - stage: omp
      name: "Code example tests with OpenMP"
      python: 3.6
      before_install: skip
      script:
        - |
          export OMP_NUM_THREADS=4
          py.test python/tests/test_code_examples.py

stages:
  - tests
  - omp
  - docs
